<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Css, | CSS &amp; Projects]]></title>
  <link href="http://Marekje.github.io/blog/categories/css/atom.xml" rel="self"/>
  <link href="http://Marekje.github.io/"/>
  <updated>2014-09-24T09:10:38+02:00</updated>
  <id>http://Marekje.github.io/</id>
  <author>
    <name><![CDATA[Marekje]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[CSS Namespacing and Efficiency]]></title>
    <link href="http://Marekje.github.io/blog/2014/09/12/quote-from-trello-css/"/>
    <updated>2014-09-12T09:55:52+02:00</updated>
    <id>http://Marekje.github.io/blog/2014/09/12/quote-from-trello-css</id>
    <content type="html"><![CDATA[<blockquote><p>So you may think everything is all-good-thumbs-up when you write <code>.foo div</code> because there are only a few <code>.foos</code>, but actually <strong>you are asking the browser to look up all the tens of millions of <code>divs</code> first</strong>, then all the <code>.foos</code> and exponentially more with more descendant selectors. Yipes. For more, check out the CSS Tricks article about efficiently rendering CSS.</p></blockquote>

<p><em>From : <a href="http://blog.trello.com/refining-the-way-we-structure-our-css-at-trello/">Trello&rsquo;s blog : refining the way we structure our CSS</a></em></p>

<p><em>The -Must Read- CSS-Tricks article mentionned : <a href="http://css-tricks.com/efficiently-rendering-css/">CSS-Tricks : Efficiently rendering CSS</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS Without Classes : The Attributes Module]]></title>
    <link href="http://Marekje.github.io/blog/2014/09/06/css-without-classes-attributes-module/"/>
    <updated>2014-09-06T15:36:28+02:00</updated>
    <id>http://Marekje.github.io/blog/2014/09/06/css-without-classes-attributes-module</id>
    <content type="html"><![CDATA[<p>Yesterday, Glenn Maddern introduced a new concept for styling HTML websites : the <a href="http://glenmaddern.com/articles/introducing-am-css">Attributes Modules</a>. His explanation being very thorough and well-written, you should read it first.</p>

<p>I used it today for a small pen about language learning card :</p>

<p>The HTML uses attributes (starting with <code>am-attribute</code> so I know it&rsquo;s part of this module, it&rsquo;s very much like Angular&rsquo;s <code>ng-stuff</code>) instead of classes.</p>

<h3>The code :</h3>

<p>Here I have three modules :</p>

<ul>
<li><strong>Card :</strong> <code>am-Card</code> to style Cards in general</li>
<li><strong>Lang :</strong> <code>am-Lang</code> to make sure the user can recognize pinyin (latin-characters chinese) at a glance for example.</li>
<li><strong>Question :</strong> <code>am-Question</code>, which will hide and show blocks of text, so the user has to guess them.</li>
</ul>


<p>The HTML template for my Card :
<code>html
&lt;article am-Card&gt;
  &lt;p am-Lang="chinese"&gt;我&lt;em am-Question="hidden"&gt;刻&lt;/em&gt;一个铁剑。&lt;/p&gt;
  &lt;p am-Lang="pinyin"&gt;wǒ &lt;em am-Question="hidden"&gt;kè&lt;/em&gt; yī ge tiě jiàn.&lt;/p&gt;
  &lt;p am-Lang="english"&gt;I &lt;em am-Question="none"&gt;sculpt&lt;/em&gt; one iron sword&lt;/p&gt;
&lt;/article&gt;
</code></p>

<p>The CSS I use :
``` css
/<em> CARD module </em>/
[am-Card] {
  /<em> Basic CSS stuff about Cards</em>/
}</p>

<p>/<em> QUESTION module </em>/
/<em> stuff about Questions that won&rsquo;t change if I apply a modifier </em>/
[am-Question] {
  font-style: inherit;
  border-radius: 0.1em;
}
/<em> Questions with &ldquo;shown&rdquo; state will have a sliiight background color
   to know it&rsquo;s been revealed </em>/
[am-Question~=&ldquo;shown&rdquo;] {
  background-color: rgba($color-hidden, 0.3);
  transition: all 0.1s ease-in-out;
}
/<em> Questions with &ldquo;hidden&rdquo; state will have the same background-color
   and color to hide them ! I&rsquo;m quoite proud of this trick :P </em>/
[am-Question~=&ldquo;hidden&rdquo;] {
  color: $color-hidden;
  background-color: $color-hidden;
}
```</p>

<h3>Pro&rsquo;s and Con&rsquo;s</h3>

<ul>
<li>You never have to worry about two <code>.hidden</code>classes with different behaviors.</li>
<li>You won&rsquo;t have huge <code>Card__Question--hidden</code> classes like BEM does, because each module has its own attribute (avoids Global Namespace !).</li>
<li>Since all your attributes have meaning, I think we can use the same attributes for CSS and JS. The attribute only shows an information, CSS and JS can do whatever they want afterwards.</li>
<li>But it&rsquo;s not very pretty to have <code>[am-Question~="shown"]</code> everywhere in your css&hellip;</li>
</ul>


<h3>The full Pen :</h3>

<p data-height="448" data-theme-id="2183" data-slug-hash="xwoFz" data-default-tab="result" data-user="Marekje" class='codepen'>See the Pen <a href='http://codepen.io/Marekje/pen/xwoFz/'>Hide some text</a> by Pierre (<a href='http://codepen.io/Marekje'>@Marekje</a>) on <a href='http://codepen.io'>CodePen</a>.</p>


<script async src="//codepen.io/assets/embed/ei.js"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Smooth Buttons System in CSS]]></title>
    <link href="http://Marekje.github.io/blog/2014/08/17/a-smooth-buttons-system-in-css/"/>
    <updated>2014-08-17T16:00:36+02:00</updated>
    <id>http://Marekje.github.io/blog/2014/08/17/a-smooth-buttons-system-in-css</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve made a system of buttons for an application I&rsquo;m creating right now. I don&rsquo;t dislike flat design, but it always bugged me that buttons would be so&hellip; bland.</p>

<p>So I&rsquo;ve made a simple buttons system easy to improve so I can add what I need later on:</p>

<p data-height="268" data-theme-id="2183" data-slug-hash="lIwzn" data-default-tab="result" class='codepen'>See the Pen <a href='http://codepen.io/Marekje/pen/lIwzn/'>Smooth buttons system</a> by Pierre (<a href='http://codepen.io/Marekje'>@Marekje</a>) on <a href='http://codepen.io'>CodePen</a>.</p>


<script async src="//codepen.io/assets/embed/ei.js"></script>


<p>The github Gist : <a href="https://gist.github.com/Marekje/58e8c9103af720e71905">Gist</a></p>
]]></content>
  </entry>
  
</feed>
